<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">    
<!-- namespace用于java代码调用时识别指定xml的mapper文件 -->  
<mapper namespace="org.seckill.dao.SeckillDao">  
 <!-- 开启Mabatis二级缓存 -->  
 <!-- <cache/>  -->
<!-- 配置ORM映射 -->  
<!-- <resultMap type="Seckill" id="seckill_orm">  
 <id property="id" column="id"/>  
 <result property="seckillId" column="seckill_id"/>  
 <result property="name" column="name"/>  
 <result property="number" column="number"/>  
 <result property="startTime" column="start_time"/>  
 <result property="endTime" column="end_time"/> 
 <result property="createTime" column="create_time"/>  
</resultMap>   -->
  
<!-- 用来定义可重用的SQL代码段 -->  
<sql id="seckill1">  
 seckill_id,name,number,start_time,end_time,create_time  
</sql>  

   
 <update id="reduceNumber" >  
 <!-- 使用CDATA告诉xml这里的小于等于不是xml的语法 -->
  UPDATE seckill SET number=number-1 
  where seckill_id=#{seckillId}
  and start_time <![CDATA[<=]]>#{killTime}
  and end_time <![CDATA[>=]]>#{killTime}
  and number>0;  
 </update>  
 <!-- 参数类型这里只写了类型没有写包名，时因为在mybatis的配置文件里配置了这个文件 -->
 <select id="queryById"  resultType="Seckill" parameterType="long">
     <!-- include 引用可重用的SQL代码段 -->
    select <include refid="seckill1"/>
    from seckill
     where seckill_id=#{seckillId22}
 </select>
 <!-- 返回集合，可以只写其中的对象，也可以自己在定义 -->
 <select id="queryAll" resultType="Seckill" >
    select <include refid="seckill1"/>
    from seckill
    order by create_time desc
    limit ${offset},#{limit}
 </select>
    <!--使用mybatis调用存储过程-->
       <select id="killByProcedure" statementType="CALLABLE">
           call execute_seckill(
           #{seckillId,jdbcType=BIGINT,mode=IN},
           #{phone,jdbcType=BIGINT,mode=IN},
           #{killTime,jdbcType=TIMESTAMP,mode=IN},
           #{result,jdbcType=INTEGER,mode=OUT}
           )

       </select>

</mapper>    